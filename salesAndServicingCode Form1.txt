using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.OleDb;
using System.Text.RegularExpressions;
using System.Security.Cryptography;


namespace salesAndServicingMotors
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        bool dataStorageAllowed = false;
        //When the form loads this function is run, it tells the program to set the forms size to only be big enough to display the login selctor panel.
        //It then tells the program to set the login selector panel to be visible to the user.
        //It then tells the program to set the location of the login selector panel to be inside the actual program as for programming it will not be where it should be. 
        //It then tells the panel called register, customer login and employee login to all be set to not visible to the user as they have to select if they are a returning customer, new customer or employee first.
        private void Form1_Load(object sender, EventArgs e)
        {
            originalPageLoad();
        }

        private void btnNewCustomer_Click(object sender, EventArgs e)
        {
            //When this button is pressed the customer has told the program that they are a new customer and have not been with the company before. This code sets the size of the screen and sets the relevant pages to visible while also setting the irrelevant pages to invisible.
            pnlRegister.Visible = true;
            pnlLoginSelection.Visible = false;
            this.Size = new Size(388, 316);
            pnlRegister.Location = new Point(1, 3);
            pnlRegister.Size = new Size(377, 430);
            pnlDobDropped.Location = new Point(14, 198);
            pnlDobDropped.Visible = true;
        }

        private void btnDataStorageInfo_Click(object sender, EventArgs e)
        {
            //When this button is pressed the user is taken to an external website owned and managed by the company that provides details about how the company stores and handles user data.
            System.Diagnostics.Process.Start("https://salesandservicingmotorspolicy.netlify.app/");
        }

        private void RegisterdateOfBirth_DropDown(object sender, EventArgs e)
        {
            //This code here tells the buttons at the bottom of the register page to move down and out of the way of the calendar that is being opened.
            this.Size = new Size(396, 475);
            pnlRegister.Size = new Size(377, 430);
            pnlDobDropped.Location = new Point(14, 363);           
        }

        private void dataStoragePolicy_CheckedChanged(object sender, EventArgs e)
        {
            dataStorageAllowed = true;
        }

        private void passwordRequirementChecker(string password)
        {
            //Create empty string to contain error msg
            string ErrorMessage = "";
            string specialChars = @"%!@#$^&*()/?>.<,:;\|{}[]_~`+=-";
            //put the string into an array
            char[] specialChArray = specialChars.ToCharArray();
            //Indicate that we have NOT found a special chars yet
            bool noSpecialChars = true;

            foreach (char ch in specialChArray)
            {
                if (password.Contains(ch))
                {
                    noSpecialChars = false;
                }
            }

            if (password.Length < 8) //Checks password length is above 8
            {
                ErrorMessage = "Your password is must be at least 8 characters!";
            }
            else if (!password.Any(char.IsUpper)) //Checks for an uppercase
            {
                ErrorMessage = "Your password must contain an UPPERCASE letter";
            }
            else if (!password.Any(char.IsLower)) //Checks for an lowercase
            {
                ErrorMessage = "Your password must contain a lowercase letter";
            }
            else if (password.Contains(" ")) //Checks for any spaces
            {
                ErrorMessage = "Your password must NOT contain any spaces";
            }
            else if (noSpecialChars == true) //Checks for any special characters
            {
                ErrorMessage = "Your password must contain a special character!";
            }
            else
            {
                return true;
            }

            MessageBox.Show(ErrorMessage, "Password Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            return false;
        }

        private void emailRequirementChecker(string email)
        {
            string regex = @"^[^@\s]+@[^@\s]+\.(com|net|org|gov|uk|ac)$";

            bool eMailisValid = Regex.IsMatch(email, regex, RegexOptions.IgnoreCase);

            if (eMailisValid)
            {
                return true;
            }
            else
            {
                MessageBox.Show("Your email format is invalid, please alter it", "Invalid Email", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return false;
            }
        }
        private string HashPassword(string password)
        {
            //To generate the full hash we need to generate a hash string which will be called by a function called GenerateHashString()

            using (var algo = new SHA256Managed())
            {
                return GenerateHashString(algo, password);
            }
        }

        private string GenerateHashString(HashAlgorithm algo, string text)
        {
            algo.ComputeHash(Encoding.UTF8.GetBytes(text));

            //Get the hash value in an array of bytes
            var result = algo.Hash;

            return String.Join(string.Empty, result.Select(x => x.ToString("x2")));
        }

        private void btnCreateAccount_Click(object sender, EventArgs e)
        {
            if (dataStorageAllowed == true)
            {
                MessageBox.Show("Thanks, Account Created!");
            }
            else if (dataStorageAllowed == false)
            {
                MessageBox.Show("Please accept our privacy and data storage policy!");
            }

            //Check the email 
            if (new EmailAddressAttribute().IsValid(txtRegisterEmail.Text) && IsValid(txtRegisterEmail.Text))
            {
                if (passwordRequirementChecker(txtRegisterPassword.Text))
                {

                    //Hash the password
                    string passwordHash = HashPassword(txtRegisterPassword.Text);

                    //Add to DB
                    sql = "insert into users (username, firstname, surname, phoneNumber, secretword) values (@username, @firstname, @surname, @phoneNumber, @secretword)";

                    OleDbCommand command = new OleDbCommand(sql, con);

                    command.Parameters.AddWithValue("@username", txtRegisterEmail.Text);
                    command.Parameters.AddWithValue("@firstname", txtRegisterFirstname.Text);
                    command.Parameters.AddWithValue("@surname", txtRegisterSurname.Text);
                    command.Parameters.AddWithValue("@phoneNumber", txtRegisterPhoneNumber.Text);
                    command.Parameters.AddWithValue("@secretword", passwordHash);
                    OpenDb();

                    try
                    {
                        command.ExecuteNonQuery();
                        MessageBox.Show("Account Created!");
                        pnlLogon.Visible = true;
                        pnlLogonButtons.Visible = true;
                        pnlRegister.Visible = false;
                        pnlDobDropped.Visible = false;
                    }
                    catch
                    {
                        MessageBox.Show("An account with this email already exists!");
                    }
                }
            }
        }

        private void RegisterdateOfBirth_CloseUp(object sender, EventArgs e)
        {
            //This reverts the code from the 'RegisterdateIfBirth_DropDown' function.
            this.Size = new Size(388, 316);
            pnlRegister.Location = new Point(1, 3);
            pnlRegister.Size = new Size(377, 430);
            pnlDobDropped.Location = new Point(14, 198);
        }

        private void pictureBox1_MouseDown(object sender, MouseEventArgs e)
        {
            //This code runs when the user holds the mouse left click over the picture box on the register page. It un hides the password the user has typed in and makes it visible.
            pictureBox1.BackgroundImage = salesAndServicingMotors.Properties.Resources.passwordEyeOpen;
            txtRegisterPassword.PasswordChar = '\0';
            txtRegisterPassword.UseSystemPasswordChar = false;
        }

        private void pictureBox1_MouseUp(object sender, MouseEventArgs e)
        {
            //This code is for when the user lets go of holding left mouse click and changes the picture back to the closed eye and hides the password back again.
            pictureBox1.BackgroundImage = salesAndServicingMotors.Properties.Resources.passwordEyeClosed;
            txtRegisterPassword.PasswordChar = '*';
            txtRegisterPassword.UseSystemPasswordChar = false;
        }

        private void clearProcedure()
        {
            txtRegisterEmail.Clear();
            txtRegisterFirstname.Clear();
            txtRegisterSurname.Clear();
            txtRegisterPhoneNumber.Clear();
            txtRegisterPassword.Clear();
        }

        private void btnRegisterClear_Click(object sender, EventArgs e)
        {
            DialogResult dialogResult = MessageBox.Show("Are you sure you want to clear the data?", "Clear Data", MessageBoxButtons.YesNo);
            if (dialogResult == DialogResult.Yes)
            {
                clearProcedure();
            }         
        }

        private void btnReturningCustomer_Click(object sender, EventArgs e)
        {
            pnlRegister.Visible = false;
            pnlLoginSelection.Visible = false;
            pnlLogon.Visible = true;
            this.Size = new Size(397, 199);
            pnlLogon.Location = new Point(1, 1);
            pnlLogon.Size = new Size(377, 157);
            pnlLogonButtons.Visible = true;

        }
        private void originalPageLoad()
        {
            this.Size = new Size(322, 145);
            pnlLoginSelection.Visible = true;
            pnlLoginSelection.Location = new Point(0, 2);
            pnlRegister.Visible = false;
            pnlLogon.Visible = false;
            pnlEmpLogin.Visible = false;    
        }
        private void btnRegisterBack_Click(object sender, EventArgs e)
        {
            originalPageLoad();
        }

        private void btnLogonBack_Click(object sender, EventArgs e)
        {
            originalPageLoad();
        }

        private void pictureBoxCustLogin_MouseDown(object sender, MouseEventArgs e)
        {
            pictureBoxCustLogin.BackgroundImage = salesAndServicingMotors.Properties.Resources.passwordEyeOpen;
            txtLogonPassword.PasswordChar = '\0';
            txtLogonPassword.UseSystemPasswordChar = false;
        }

        private void pictureBoxCustLogin_MouseUp(object sender, MouseEventArgs e)
        {
            pictureBox1.BackgroundImage = salesAndServicingMotors.Properties.Resources.passwordEyeClosed;
            txtLogonPassword.PasswordChar = '*';
            txtLogonPassword.UseSystemPasswordChar = false;
        }

        private void btnExistingEmployee_Click(object sender, EventArgs e)
        {
            pnlEmpLogin.Visible=true;
            pnlEmpLoginButtons.Visible = true;
            pnlDobDropped.Visible = false;
            pnlLoginSelection.Visible = false;
            pnlLogon.Visible = false;
            pnlLogonButtons.Visible = false;
            pnlRegister.Visible = false;    
            pnlSettings.Visible=false;
            pnlEmpLogin.Location = new Point(0, 1);
            pnlEmpLogin.Size = new Size(377, 157);
            this.Size = new Size(394, 198);
        }

        private void btnEmployeeLoginBack_Click(object sender, EventArgs e)
        {
            originalPageLoad();
        }
    }
}
